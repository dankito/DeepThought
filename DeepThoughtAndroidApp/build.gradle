apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId "net.dankito.deepthought"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion

        versionCode appVersionCode
        versionName appVersionName

        resValue "string", "app_name", "DeepThought"

        multiDexEnabled true

        testInstrumentationRunner "net.dankito.deepthought.android.MockTestRunner"
    }

    buildTypes {
        debug {
            applicationIdSuffix = ".develop"
            resValue "string", "app_name", "DeepThought Develop"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {
        standard {
            dimension = "default"
        }
        beta {
            applicationIdSuffix = ".beta"
            resValue "string", "app_name", "DeepThought Beta"

            dimension = "default"
        }
        extended {
            applicationIdSuffix = ".extended"
            resValue "string", "app_name", "DeepThought Extended"

            dimension = "default"
        }
    }

    sourceSets {
        main.java.srcDirs += [ 'src/main/kotlin' ]
        standard.java.srcDirs += [ 'src/standard/kotlin', 'src/common/kotlin' ]
        beta.java.srcDirs += [ 'src/beta/kotlin' ]
        extended.java.srcDirs += [ 'src/extended/kotlin' ]
    }

    signingConfigs {
        debug {
            // so that all machines have the same signing key, no matter if app is installed from developer's machine from Jenkins
            storeFile file('debug-keystore.jks')
            storePassword 'find_my_bugs_before_releasing_me'
            keyAlias 'DebugKey'
            keyPassword 'find_my_bugs_before_releasing_me'
        }
    }

    dexOptions {
        maxProcessCount 4 // this is the default value
        javaMaxHeapSize "3g"

        preDexLibraries = true
    }

    lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet true
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlinVersion"
    }
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation project(':DeepThoughtUiCommon')
    implementation project(':AndroidCouchbaseLiteEntityManager')
    implementation project(':AndroidUdpDevicesDiscoverer')
    implementation project(':AndroidPdfImporter')

    implementation "com.squareup.picasso:picasso:$picassoVersion"

    implementation "com.github.clans:fab:$clansFloatingActionButtonVersion"
    implementation "com.daimajia.swipelayout:library:$swipeLayoutVersion"
    implementation "com.google.android:flexbox:$flexboxVersion"

    implementation "net.dankito.utils:android-utils:$androidUtilsVersion"

    implementation "net.dankito.richtexteditor:richtexteditor-android:$richTextEditorVersion", {
        exclude group: 'net.dankito.utils', module: 'java-utils'
        exclude group: 'net.dankito.utils', module: 'android-utils'
        exclude group: 'net.dankito.filechooserdialog', module: 'filechooserdialog-android'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
        exclude group: 'com.fasterxml.jackson.module', module: 'jackson-module-kotlin'
    }

    implementation "net.dankito.filechooserdialog:filechooserdialog-android:$fileChooserVersion", {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support.constraint', module: 'constraint-layout'
        exclude module: 'recyclerview-v7'
    }

    implementation "org.slf4j:slf4j-android:$slf4jVersion"

    implementation "com.android.support:multidex:$multiDexVersion"

    implementation "com.android.support:appcompat-v7:$androidAppCompatVersion"
    implementation "com.android.support:cardview-v7:$androidAppCompatVersion"
    implementation "com.android.support:design:$androidDesignVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    extendedImplementation project(':ArticleSummaryExtractors') // not published to Play Store

    testImplementation "junit:junit:$junitVersion"

    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:2.2.2") {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }


    androidTestImplementation 'com.squareup.spoon:spoon-client:1.7.1'
    androidTestImplementation('com.jraska:falcon-spoon-compat:1.0.4') {
        exclude group: 'com.squareup.spoon', module: 'spoon-client'
    }

    // you need to install fastlane first (install Ruby Package Manager gem): sudo gem install fastlane
    androidTestImplementation('tools.fastlane:screengrab:1.0.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
}