apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

sourceCompatibility = "1.7"
targetCompatibility = "1.7"


sourceSets {
    main.java.srcDirs += [ 'src/main/kotlin', 'build/generated/source/kapt/main' ]
    test.java.srcDirs += [ 'src/test/kotlin', 'build/generated/source/kapt/test' ]
}


test {
    ignoreFailures = true
    testLogging.showStandardStreams = true
}


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    compile project(':DeepThoughtSynchronization')

    compile project(':NewsReader')

//    compile project(':NorconexLanguageDetector')
//    compile project(':OptimaizeLanguageDetector')

    compile "org.apache.commons:commons-lang3:$commonsLangVersion"

    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    compile "com.google.dagger:dagger:$daggerVersion"
    compileOnly 'javax.annotation:jsr250-api:1.0'


    testCompile ("junit:junit:$junitVersion", {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    })
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"

    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlinVersion" // so that Mockito.any() doesn't return null which null-safe Kotlin parameter don't like
    // for how to enable mocking final class (which is standard in Kotlin) with Mockito see https://github.com/mockito/mockito/wiki/What's-new-in-Mockito-2#mock-the-unmockable-opt-in-mocking-of-final-classesmethods

    testCompile "ch.qos.logback:logback-core:$logbackVersion"
    testCompile "ch.qos.logback:logback-classic:$logbackVersion"

    testCompile project(':LuceneSearchEngine')
    testCompile project(':JavaCouchbaseLiteEntityManager')
}