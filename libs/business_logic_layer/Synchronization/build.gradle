buildscript {
    ext {
        kotlinVersion = '1.2.21'

        annotationReaderVersion = '1.0-alpha3'


        junitVersion = '4.12'

        mockitoVersion = '2.13.0'

        mockitoKotlinVersion = '1.5.0'

        hamcrestVersion = '1.3'
    }

    repositories {
        mavenCentral()
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

        // Nexus staging plugin has to be downgraded to 0.10.0 to be applicable to sub projects, see https://github.com/UweTrottmann/SeriesGuide/commit/ca33e8ad2fa6cc5c426450c8aef3417ba073ca7f
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.10.0"
    }
}


group 'net.dankito.synchronization'
version '1.0.0-SNAPSHOT'
def mavenArtifactId = 'synchronization'


apply plugin: 'kotlin'

apply plugin: 'maven'
apply plugin: 'signing'

// So after executing uploadArchives staged repository can be closed and released by executing closeAndReleaseRepository
apply plugin: 'io.codearte.nexus-staging'


compileKotlin {
    kotlinOptions.jvmTarget = "1.6"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.6"
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    compile "net.dankito.jpa.couchbaselite:couchbase-lite-jpa:1.0-alpha3", {
        exclude group: 'org.jetbrains.kotlin'
    }

    compile "net.dankito.util:util-common:1.0.0", {
        exclude group: 'org.jetbrains.kotlin'
    }

    compile "net.dankito.jpa.annotationreader:api:$annotationReaderVersion"
    kapt "net.dankito.jpa.annotationreader:jpa-apt:$annotationReaderVersion"


    testCompile ("junit:junit:$junitVersion", {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    })
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"

    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlinVersion" // so that Mockito.any() doesn't return null which null-safe Kotlin parameter don't like
    // for how to enable mocking final class (which is standard in Kotlin) with Mockito see https://github.com/mockito/mockito/wiki/What's-new-in-Mockito-2#mock-the-unmockable-opt-in-mocking-of-final-classesmethods

    testCompile "ch.qos.logback:logback-core:$logbackVersion"
    testCompile "ch.qos.logback:logback-classic:$logbackVersion"
}
